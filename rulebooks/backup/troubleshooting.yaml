- name: troubleshoot
  hosts: all
  gather_facts: false


  vars:
    #rule_base_url: 'http://192.168.122.35:8080/path'
    rule_base_url: 'http://192.168.122.51:8080/path'

    #rule_base_url: 'http://192.168.122.35:8080/new_task'
    start: start
    end: end
    start_result: 2

    source_files:
      - '/root/ansi/files/App_Slow_Knowledge_Map'
      - '/root/ansi/files/link_data_file'

    init_knowledge_map_dir: '/tmp/192.168.122.51/root/ansi/files'

  tasks:

  - name: Prepare the knowledge map on localhost
    include_tasks: fetch-knowledge-map.yaml
          

  - name: Delegate to localhost
    block:
      #- name: Init used Knowlesge Map
      #  block:
      #  - name: replace weight 10
      #    ansible.builtin.replace:
      #      path: "{{ init_knowledge_map_dir }}/link_data_file"
      #      regexp: '0$'
      #      replace: '1'
      #  - name: replace weight 999
      #    ansible.builtin.replace:
      #      path: "{{ init_knowledge_map_dir }}/link_data_file"
      #      regexp: '999$'
      #      replace: '9'
      #  when:  
      #    - map_init is defined
      #    - not (map_init | bool)

      #- name: Copy link_data_file to remote server. Otherwise, it will lost in container.
      #  ansible.builtin.copy:
      #    src: "{{ init_knowledge_map_dir}}/link_data_file"
      #    dest: "{{ source_files[1] }}"
      #    mode: '0644'
      #  when: "inventory_hostname == '192.168.122.51'"

          
      - name: Retrieve data from knowledge map file
        set_fact:
          raw_path_data: "{{ lookup('file', '{{ init_knowledge_map_dir }}/link_data_file').split('\n') }}"
          path_data: []
      
      - name: Convert raw data to j2 input data - list of list
        set_fact:
          path_data: "{{ path_data + [ line.split(',') ] }}"
        loop: "{{ raw_path_data }}"
        loop_control:
          loop_var: line
      
      
      - name: Generate body data for KIE call
        ansible.builtin.template:
          src: templates/input.j2
          dest: "{{ init_knowledge_map_dir }}/input.json"
      
      - name: Call KIE for rcommended solution
        ansible.builtin.uri:
          url: "{{ rule_base_url }}"
          method: POST
          status_code: [201, 200]
          return_content: true
          validate_certs: no
          headers:
            accept: application/json
            Content-Type: application/json
          body_format: json
          body: "{{ lookup('ansible.builtin.file','{{ init_knowledge_map_dir }}/input.json') }}"
        register: result
      
      
          
      - name: Recommended Solutions
        set_fact:
          kie_facts: "{{ result['json'] }}"


      - name: check if new routing is found
        command: /usr/bin/python3
        args:
          stdin: |
            import re
            find_solution = False

            for f in {{ kie_facts }}:
                find_solution = True
                f['implement'] = 'Execute TroubleShoot'
                print(f)
            print(find_solution)
        register: results

      - name: Failed to find Solution
        debug:
          msg: "Failed to find Solution"
        when:  not results.stdout_lines[-1] | bool

      - name: Solution is found and add action to event queue
        block:

        - set_fact:
            solution: "{{ results.stdout_lines[0] }}"

        - debug:
            msg: "{{ solution }}"

        - name: Send event to Kafka topic to trigger troubleshooting
          ansible.builtin.shell: |
            set timeout 300
            echo "{{ solution }}" | sed "s/'/\"/g" | kafka_2.13-3.3.1/bin/kafka-console-producer.sh --broker-list 192.168.122.51:9092 --topic aap
        when:  results.stdout_lines[-1] | bool

    when: "inventory_hostname == 'localhost'"
