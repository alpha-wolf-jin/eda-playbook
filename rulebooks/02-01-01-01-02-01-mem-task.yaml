---

# Handle the single task from the recommendation

- name: [ {{ title }} ] block with condition that no task fails
  block:

  - debug: var=rb_task
  
  # Once the task was executed before (weight is zero)
  # Update the varialbe excuted_tasks as skip task 
  - name: [ {{ title }} ] update execution history
    set_fact:
      excuted_tasks: "{{ excuted_tasks + [ 'skip executed task : ' +  rb_task.strip().split('-')[0]  ] }}"
    when: rb_task.strip().split('-')[2].split(':')[1] == '0'
  
  - debug: var=excuted_tasks
    when: rb_task.strip().split('-')[2].split(':')[1] == '0'
  
  
  - name: [ {{ title }} ] Execute new task 
    block:
      - set_fact:
          rb_task_name: [ {{ title }} ] "{{  rb_task.strip().split('-')[0] }}"
    
      #- debug:
      #    msg: "{{ rb_task_name }} --- {{  tasks_results[rb_task_name] }}"

      - set_fact:
          task_result: "{{  tasks_results[rb_task_name] }}"  
      
      - set_fact:
          task_status: "Task: {{ rb_task_name }} --- Expected Return Code: {{ rb_task.strip().split('-')[1] }} --- Actual Return Code: {{ task_result }}"
  
      #- debug: var=task_status
      #- debug: var=excuted_tasks
  
      - name: [ {{ title }} ] update execution history
        set_fact:
          excuted_tasks: "{{ excuted_tasks + [  task_status ] }}"
        register: excuted_tasks_result

      #- debug: var=excuted_tasks_result
  
      #- debug: var=excuted_tasks
  
      - name: [ {{ title }} ] when task result is expected
        include_tasks: 00-05-task-as-expected.yaml
        vars:
          task: "{{ rb_task }}"
          title: 00-05-task-as-expected
        when: rb_task.strip().split('-')[1] == task_result

   
      - name: [ {{ title }} ] when task result is not expected
        include_tasks: 00-04-task-not-as-expected.yaml
        vars:
          task: "{{ rb_task }}"
          title: 00-04-task-not-as-expected
        when: rb_task.strip().split('-')[1] != task_result

  
      # Since Current recommendation cannot work. Let the entire excution end
      - name: [ {{ title }} ] mark there is the failure of task
        set_fact:
          continue_task: False
        when: rb_task.strip().split('-')[1] != task_result
    
    when: rb_task.strip().split('-')[2].split(':')[1] != '0'

  when: continue_task | bool
