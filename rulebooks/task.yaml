---
#- name: Execute task {{ task.strip().split('-')[0] }}
#  debug: 
#    msg: "Execute task: {{  task.strip().split('-')[0] }} ; Expected: {{ task.strip().split('-')[1] }} ; unlikly: {{ task.strip().split('-')[2].split(':')[1] }}"

- name: update execution history
  set_fact:
    excuted_tasks: "{{ excuted_tasks + [ 'skip executed task : ' +  task.strip().split('-')[0]  ] }}"
  when: task.strip().split('-')[2].split(':')[1] == '0'

- name: skip this task if it was executed before
  block:
    - set_fact:
        task_name: "{{  task.strip().split('-')[0] }}"
  
    - set_fact:
        task_result: "{{  tasks_results[task_name] }}"  
    
    - set_fact:
        task_status: "Task: {{ task_name }} --- Expected Return Code: {{ task.strip().split('-')[1] }} --- Actual Return Code: {{ task_result }}"

    - name: update execution history
      set_fact:
        excuted_tasks: "{{ excuted_tasks + [  task_status ] }}"

    - name: when task result is expected
      block:
    
      - name: Update the network map file when result is expected
        ansible.builtin.replace:
          path: "{{ home_dir }}/link_data_file"
          regexp: "^({{ task.strip().split('-')[0] }},{{ task_result }}),(.+),(.+)$"
          replace: '\1,\2,0'
        register: result
    
      when: task.strip().split('-')[1] == task_result
 
    - name: when task result is not expected
      block:

      - name: update execution history
        set_fact:
          excuted_tasks: "{{ excuted_tasks + [ 'Failed at task : ' +  task.strip().split('-')[0]  ] }}"

      - name: Failed on current  TroubleShoot Path
        debug: var=excuted_tasks
    
      - name: Update the network map file - when result is not expected
        ansible.builtin.replace:
          path: "{{ home_dir }}/link_data_file"
          regexp: "^({{ task.strip().split('-')[0] }},{{ task.strip().split('-')[1] }}),(.+),(.+)$"
          replace: '\1,\2,999'
        register: result
    
      - name: Update the network map file when result is expected
        ansible.builtin.replace:
          path: "{{ home_dir }}/link_data_file"
          regexp: "^({{ task.strip().split('-')[0] }},{{ task_result }}),(.+),(.+)$"
          replace: '\1,\2,0'
        register: result
    
      - name: Send event to find current best solution
        ansible.builtin.shell: |
          set timeout 300
          echo '{"implement": "Rule-Base"}' | sed "s/'/\"/g" | kafka_2.13-3.3.1/bin/kafka-console-producer.sh --broker-list 192.168.122.33:9092 --topic quickstart-events
    
      - meta: end_play
    
      when: task.strip().split('-')[1] != task_result
  
  when: task.strip().split('-')[2].split(':')[1] != '0'

